{"version":3,"sources":["webpack:///./node_modules/vue-intersect/dist/index.js"],"names":["warn","msg","config","silent","console","name","abstract","props","threshold","type","Array","required","default","root","HTMLElement","Object","rootMargin","String","mounted","_this","this","observer","IntersectionObserver","entries","isIntersecting","$emit","$nextTick","$slots","length","observe","elm","destroyed","disconnect","render"],"mappings":"kHAAA,uBAEIA,EAAO,SAAcC,GAClB,OAAIC,OAAOC,QACdC,QAAQJ,KAAKC,IAIF,cACbI,KAAM,YACNC,UAAU,EACVC,MAAO,CACLC,UAAW,CACTC,KAAMC,MACNC,UAAU,EACVC,QAAS,WACP,MAAO,CAAC,EAAG,MAGfC,KAAM,CACJJ,KAA6B,qBAAhBK,YAA8BA,YAAcC,OACzDJ,UAAU,EACVC,QAAS,WACP,OAAO,OAGXI,WAAY,CACVP,KAAMQ,OACNN,UAAU,EACVC,QAAS,WACP,MAAO,qBAIbM,QAAS,WACP,IAAIC,EAAQC,KAEZA,KAAKC,SAAW,IAAIC,sBAAqB,SAAUC,GAC5CA,EAAQ,GAAGC,eAGdL,EAAMM,MAAM,QAAS,CAACF,EAAQ,KAF9BJ,EAAMM,MAAM,QAAS,CAACF,EAAQ,KAKhCJ,EAAMM,MAAM,SAAU,CAACF,EAAQ,OAC9B,CACDf,UAAWY,KAAKZ,UAChBK,KAAMO,KAAKP,KACXG,WAAYI,KAAKJ,aAGnBI,KAAKM,WAAU,WACb,GAAIP,EAAMQ,OAAOf,SAAWO,EAAMQ,OAAOf,QAAQgB,OAAS,EACxD5B,EAAK,iFACA,IAAKmB,EAAMQ,OAAOf,SAAWO,EAAMQ,OAAOf,QAAQgB,OAAS,EAEhE,YADA5B,EAAK,0EAIPmB,EAAME,SAASQ,QAAQV,EAAMQ,OAAOf,QAAQ,GAAGkB,SAGnDC,UAAW,WACTX,KAAKK,MAAM,aACXL,KAAKC,SAASW,cAEhBC,OAAQ,WACN,OAAOb,KAAKO,OAAOf,QAAUQ,KAAKO,OAAOf,QAAQ,GAAK","file":"js/chunk-2d0d724a.92afd219.js","sourcesContent":["import Vue from 'vue';\n\nvar warn = function warn(msg) {\n  if (!Vue.config.silent) {\n    console.warn(msg);\n  }\n};\n\nexport default {\n  name: 'intersect',\n  abstract: true,\n  props: {\n    threshold: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [0, 0.2];\n      }\n    },\n    root: {\n      type: typeof HTMLElement !== 'undefined' ? HTMLElement : Object,\n      required: false,\n      default: function _default() {\n        return null;\n      }\n    },\n    rootMargin: {\n      type: String,\n      required: false,\n      default: function _default() {\n        return '0px 0px 0px 0px';\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.observer = new IntersectionObserver(function (entries) {\n      if (!entries[0].isIntersecting) {\n        _this.$emit('leave', [entries[0]]);\n      } else {\n        _this.$emit('enter', [entries[0]]);\n      }\n\n      _this.$emit('change', [entries[0]]);\n    }, {\n      threshold: this.threshold,\n      root: this.root,\n      rootMargin: this.rootMargin\n    });\n\n    this.$nextTick(function () {\n      if (_this.$slots.default && _this.$slots.default.length > 1) {\n        warn('[VueIntersect] You may only wrap one element in a <intersect> component.');\n      } else if (!_this.$slots.default || _this.$slots.default.length < 1) {\n        warn('[VueIntersect] You must have one child inside a <intersect> component.');\n        return;\n      }\n\n      _this.observer.observe(_this.$slots.default[0].elm);\n    });\n  },\n  destroyed: function destroyed() {\n    this.$emit('destroyed');\n    this.observer.disconnect();\n  },\n  render: function render() {\n    return this.$slots.default ? this.$slots.default[0] : null;\n  }\n};"],"sourceRoot":""}